name: Build and Deploy to Azure Web App

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        run: |
          az login --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        working-directory: infra  # ✅ Set working directory
        run: terraform init

      - name: Terraform Validate
        working-directory: infra  # ✅ Set working directory
        run: terraform validate

      - name: Terraform Apply (Creates ACR)
        working-directory: infra  # ✅ Set working directory
        run: terraform apply -auto-approve -var="image_tag=${{ github.sha }}"

      - name: Wait for ACR to be Available
        working-directory: infra  # ✅ Set working directory
        run: |
          ACR_NAME=$(terraform output -raw acr_name)
          echo "Waiting for ACR: $ACR_NAME to be available..."
          for i in {1..10}; do
            if az acr show --name "$ACR_NAME" &>/dev/null; then
              echo "ACR is available!"
              exit 0
            fi
            echo "Retrying in 10s..."
            sleep 10
          done
          echo "ACR did not become available in time."
          exit 1

      - name: Get ACR Login Server
        working-directory: infra  # ✅ Set working directory
        id: get_acr
        run: echo "ACR_SERVER=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV

  build-and-push:
    runs-on: ubuntu-latest
    needs: terraform  # Ensure Terraform runs first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        run: |
          az login --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure ACR is Reachable
        run: |
          echo "Checking if ACR is available..."
          az acr show --name "${{ env.ACR_SERVER }}" || (echo "ACR not found!" && exit 1)

      - name: Log in to ACR
        run: |
          az acr login --name "${{ env.ACR_SERVER }}"

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.ACR_SERVER }}/mywebapp:${{ github.sha }} .
          docker push ${{ env.ACR_SERVER }}/mywebapp:${{ github.sha }}
